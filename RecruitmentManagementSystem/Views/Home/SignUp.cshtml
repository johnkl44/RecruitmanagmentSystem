@model RecruitmentManagementSystem.Models.Users
@{
    Layout = "HomeLayout";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Sign up</title>
</head>
<body>
    <div>
        <h2>Sign up</h2>
        <form asp-action="Signup">
            <div>
                <label asp-for="FirstName"></label>
                <input asp-for="FirstName" required />
                <span asp-validation-for="FirstName"></span>
            </div>
            <div>
                <label asp-for="LastName"></label>
                <input asp-for="LastName" required />
                <span asp-validation-for="LastName"></span>
            </div>
            <div>
                <label asp-for="DateOfBirth"></label>
                <input asp-for="DateOfBirth" type="date" required />
                <span asp-validation-for="DateOfBirth"></span>
            </div>
            <div>
                <label asp-for="Gender"></label>
                <input asp-for="Gender" type="radio" value="Male" required /> Male
                <input asp-for="Gender" type="radio" value="Female" required /> Female
                <input asp-for="Gender" type="radio" value="Other" required /> Other
                <span asp-validation-for="Gender"></span>
            </div>
            <div>
                <label asp-for="PhoneNumber"></label>
                <input asp-for="PhoneNumber" required />
                <span asp-validation-for="PhoneNumber"></span>
            </div>
            <div>
                <label asp-for="Email"></label>
                <input asp-for="Email" type="email" required />
                <span asp-validation-for="Email"></span>
            </div>
            <div>
                <label asp-for="Address"></label>
                <input asp-for="Address" required />
                <span asp-validation-for="Address"></span>
            </div>
            <div>
                <label asp-for="State"></label>
                <select id="stateDropdown" name="StateId">
                    <option value="">Select State</option>
                    @foreach (var state in ViewBag.States)
                    {
                        <option value="@state.Value">@state.Text</option>
                    }
                </select>
            </div>
            <div>
                <label asp-for="Cities"></label>
                <select id="cityDropdown" name="CityId">
                    <option value="">Select City</option>
                </select>
            </div>
            

            <div>
                <label asp-for="Username"></label>
                <input asp-for="Username" required />
                <span asp-validation-for="Username"></span>
            </div>
            <div>
                <label asp-for="Password"></label>
                <input asp-for="Password" type="password" required" />
                <span asp-validation-for="Password"></span>
            </div>
            <div>
                <label asp-for="ConfirmPassword"></label>
                <input asp-for="ConfirmPassword" type="password" required onfocusout="checkConfirmPassword()"/>
                <span asp-validation-for="ConfirmPassword"></span>
            </div>

            <div>
                <button type="submit">Sign Up</button>
            </div>
        </form>
    </div>
</body>
</html>

<script>
    function checkConfirmPassword() {
        const passwordInput = document.getElementById("Password");
        const confirmPasswordInput = document.getElementById("ConfirmPassword");

        const passwordValue = passwordInput.value.trim();
        const confirmPasswordValue = confirmPasswordInput.value.trim();

        if (confirmPasswordValue === "") {
            setError(confirmPasswordInput, "Please confirm your password.");
        }

        else if (confirmPasswordValue !== passwordValue) {
            setError(confirmPasswordInput, "Passwords do not match.");
        }
        else {
            setSuccess(confirmPasswordInput);
        }
    }

    // Trigger GetCitiesByState when a state is selected
    $('#stateDropdown').change(function () {
        var stateId = $(this).val();
        if (stateId) {
            $.ajax({
                url: '@Url.Action("GetCitiesByState", "Home")',
                type: 'GET',
                data: { stateId: stateId },
                success: function (cities) {
                    var cityDropdown = $('#cityDropdown');
                    cityDropdown.empty();  // Clear existing options
                    cityDropdown.append('<option value="">Select City</option>');  // Reset to default

                    // Check if cities are returned
                    if (cities && cities.length > 0) {
                        // Populate city options
                        $.each(cities, function (index, city) {
                            cityDropdown.append('<option value="' + city.Value + '">' + city.Text + '</option>');
                        });
                    } else {
                        cityDropdown.append('<option value="">No Cities Available</option>');
                    }
                },
                error: function (error) {
                    console.log("Error fetching cities:", error);
                    alert("Error fetching cities. Please try again.");
                }
            });
        } else {
            $('#cityDropdown').empty().append('<option value="">Select City</option>');
        }
    });



</script>
